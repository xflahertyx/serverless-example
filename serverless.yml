service: serverless-example
provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-2

functions:
  event-producer:
    handler: event-producer/index.handler
    role: sqsRole
    environment:
      QUEUE_URL:
        Ref: eventQueue
    events:
      - http: 
          path: events
          method: post
    
  event-consumer: 
    handler: event-consumer/index.handler
    role: sqsRole
    environment:
      ENDPOINT_URL: "false"
      DLQ_BUCKET: 
        Ref: dlqBucket
      QUEUE_URL:
        Ref: eventQueue
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - eventQueue
              - Arn
          batchSize: 10

resources:
  Resources:
    eventQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: events

    dlqBucket:
      Type: "AWS::S3::Bucket"
      Properties: 
        BucketName: "event-dlq-bucket"

    sqsRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "example-serverless-sqs-role"
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        Policies:
          - PolicyName: specificPermissons
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: "*"
                  Resource: "*"
